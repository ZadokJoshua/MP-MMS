// <auto-generated />
using System;
using MP_MMS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MP_MMS.Data.Migrations
{
    [DbContext(typeof(MPMMSDbContext))]
    [Migration("20221118162857_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MP_MMS.Domain.Model.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "mikejonathan@mpmms.com",
                            FirstName = "Mike",
                            LastName = "Jonathan",
                            Role = "Electrician"
                        },
                        new
                        {
                            Id = 2,
                            Email = "susanaaron@mpmms.com",
                            FirstName = "Susan",
                            LastName = "Aaron",
                            Role = "Safety officer"
                        },
                        new
                        {
                            Id = 3,
                            Email = "barnabasotee@mpmms.com",
                            FirstName = "Barnabas",
                            LastName = "Otee",
                            Role = "CNC Operator"
                        });
                });

            modelBuilder.Entity("MP_MMS.Domain.Model.Issue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PartId")
                        .HasColumnType("int");

                    b.Property<string>("Priority")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PartId");

                    b.ToTable("Issues");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Replace damage bearings.",
                            DueDate = new DateTime(2022, 11, 19, 17, 28, 56, 830, DateTimeKind.Local).AddTicks(895),
                            EmployeeId = 1,
                            IsCompleted = false,
                            Name = "Damage Bearings",
                            PartId = 6,
                            Priority = "Medium"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Replace broken welding helmet screen with the newer screen that are available in store 1.",
                            DueDate = new DateTime(2022, 11, 23, 17, 28, 56, 830, DateTimeKind.Local).AddTicks(903),
                            EmployeeId = 2,
                            IsCompleted = true,
                            Name = "Broken welding helmet screen",
                            PartId = 2,
                            Priority = "Low"
                        },
                        new
                        {
                            Id = 3,
                            Description = "There's is a leakage at the bottom of the Compressed Air Storage Tank. Please work together with the welder to fix the issue.",
                            DueDate = new DateTime(2022, 11, 19, 17, 28, 56, 830, DateTimeKind.Local).AddTicks(906),
                            EmployeeId = 2,
                            IsCompleted = false,
                            Name = "Tank leakage",
                            PartId = 5,
                            Priority = "Medium"
                        });
                });

            modelBuilder.Entity("MP_MMS.Domain.Model.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "SIPET, Mechanical Engineering Building, Gidan-Kwanu Campus, Minna",
                            Name = "Mechanical Engineering Workshop 1"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Opposite Engineering Complex, Gidan-Kwanu Campus, Minna",
                            Name = "Mechanical Engineering Workshop 2"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Opposite Engineering Complex, Gidan-Kwanu Campus, Minna",
                            Name = "CNC Workshop 1"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Physics Department, Bosso Campus, Minna",
                            Name = "Milling Workshop 1"
                        });
                });

            modelBuilder.Entity("MP_MMS.Domain.Model.Part", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ModelNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("UnitCost")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Parts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Actuator",
                            DateAdded = new DateTime(2022, 11, 18, 17, 28, 56, 830, DateTimeKind.Local).AddTicks(781),
                            LocationId = 1,
                            Manufacturer = "McMaster Engineering Limited",
                            ModelNumber = "C5-1",
                            Name = "Face-Mount AC Motors",
                            Quantity = 3,
                            SerialNumber = "732675",
                            UnitCost = 1200m
                        },
                        new
                        {
                            Id = 2,
                            Category = "Others",
                            DateAdded = new DateTime(2022, 11, 18, 17, 28, 56, 830, DateTimeKind.Local).AddTicks(809),
                            LocationId = 3,
                            Manufacturer = "Fiberglass Engineering",
                            ModelNumber = "ADW-4F",
                            Name = "Auto-Darkening Welding Helmets",
                            Quantity = 2,
                            SerialNumber = "N/A",
                            UnitCost = 3200m
                        },
                        new
                        {
                            Id = 3,
                            Category = "Others",
                            DateAdded = new DateTime(2022, 11, 18, 17, 28, 56, 830, DateTimeKind.Local).AddTicks(815),
                            LocationId = 3,
                            Manufacturer = "Fiberglass Engineering",
                            ModelNumber = "WWG-2F",
                            Name = "Wraparound Welding Glasses",
                            Quantity = 30,
                            SerialNumber = "N/A",
                            UnitCost = 200m
                        },
                        new
                        {
                            Id = 4,
                            Category = "Belt",
                            DateAdded = new DateTime(2022, 11, 18, 17, 28, 56, 830, DateTimeKind.Local).AddTicks(819),
                            LocationId = 2,
                            Manufacturer = "McMaster Engineering Limited",
                            ModelNumber = "SPCON-A2",
                            Name = "Sprockets for Conveyor Chain Belts",
                            Quantity = 12,
                            SerialNumber = "263712",
                            UnitCost = 1200m
                        },
                        new
                        {
                            Id = 5,
                            Category = "Others",
                            DateAdded = new DateTime(2022, 11, 18, 17, 28, 56, 830, DateTimeKind.Local).AddTicks(824),
                            LocationId = 1,
                            Manufacturer = "BlueLight",
                            ModelNumber = "T3-CAS",
                            Name = "Compressed Air Storage Tank",
                            Quantity = 1,
                            SerialNumber = "9888K9",
                            UnitCost = 5500m
                        },
                        new
                        {
                            Id = 6,
                            Category = "Bearing",
                            DateAdded = new DateTime(2022, 11, 18, 17, 28, 56, 830, DateTimeKind.Local).AddTicks(828),
                            LocationId = 2,
                            Manufacturer = "McMaster Engineering Limited",
                            ModelNumber = "N/A",
                            Name = "Bearings for suspension system",
                            Quantity = 2,
                            SerialNumber = "4712",
                            UnitCost = 50m
                        });
                });

            modelBuilder.Entity("MP_MMS.Domain.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "Admin",
                            UserName = "Admin"
                        });
                });

            modelBuilder.Entity("MP_MMS.Domain.Model.Issue", b =>
                {
                    b.HasOne("MP_MMS.Domain.Model.Employee", "Employee")
                        .WithMany("Issues")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MP_MMS.Domain.Model.Part", "Part")
                        .WithMany("Issues")
                        .HasForeignKey("PartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Part");
                });

            modelBuilder.Entity("MP_MMS.Domain.Model.Part", b =>
                {
                    b.HasOne("MP_MMS.Domain.Model.Location", "Location")
                        .WithMany("Parts")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("MP_MMS.Domain.Model.Employee", b =>
                {
                    b.Navigation("Issues");
                });

            modelBuilder.Entity("MP_MMS.Domain.Model.Location", b =>
                {
                    b.Navigation("Parts");
                });

            modelBuilder.Entity("MP_MMS.Domain.Model.Part", b =>
                {
                    b.Navigation("Issues");
                });
#pragma warning restore 612, 618
        }
    }
}
